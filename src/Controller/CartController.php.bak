<?php

namespace App\Controller;

use App\Repository\ProductRepository;
// use Symfony\Component\BrowserKit\Request;
use Symfony\Component\HttpFoundation\Request;

use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

class CartController extends AbstractController
{
    protected $session;
    protected $productRepository;

    public function __construct(SessionInterface $session, ProductRepository $productRepository)
    {
        $this->session = $session;
        $this->productRepository = $productRepository;
    }

    public function show(CartService $cartService){
        $getDetailedCart = $cartService->$getDetailedCartItems();
        $total = $cartService->getTotal();
    
        return $this->render('/cart/index.html.twig', [
         'items' => $detailedCart,
         'total' => $total
        ]);
    } 

    public function getDetailedItems() : array){
        $detailedCaer = [];
        $total = 0;
        
        forrach ($session->get('cart', []) as $id => $qty){
            $product = $productRepository->find('id');
        
            $detailedCart[] = [
                'product' => $product,
                'qty' => $qty
                ]
                }
                return
            }


       public function getTotal : int{
        $total = 0;

        forrach ($session->get('cart', []) as $id => $qty){
            $product = $productRepository->find('id');

            $total = $product->getPrice() * qty;
            ]
        }
       }
    }
}
